description: |
  Creates a terraform plan and outputs to the stdout. Additonally, the machine and human readable plans are persisted to the workspace to use in future jobs.
  Use cyber4all/comment after plan to add a comment to the github PR with the plan.

executor:
  name: aws-cli/default

parameters:
  # ---------------------------------------------------------------------------------
  # OPTIONAL PARAMETERS
  # These parameters have reasonable defaults.
  # ---------------------------------------------------------------------------------
  path:
    default: .
    description: Path to the terraform module
    type: string

  role_arn:
    default: CIRCLECI_OIDC_ROLE
    description: >-
      The Amazon Resource Name (ARN) of the role that the caller is assuming.
      Role ARN must be configured for web identity.
    type: env_var_name

  service:
    type: enum
    enum: ["ecs", "lambda"]
    default: ecs
    description: >-
      The AWS service that is being deployed to with terraform.

steps:
  - checkout
  - aws-cli/setup:
      role_session_name: plan
      role_arn: $<<parameters.role_arn>>
  - attach_workspace:
      at: .
  - tf/install:
      terraform_version: 1.2.9
  - tf/init:
      path: <<parameters.path>>
  - when:
      condition:
        equal: ["ecs", << parameters.service >>]
      steps:
        - run:
            name: ECS Plan
            command: >
              terraform -chdir=<<parameters.path>> plan -var="image=$(cat digest.txt)" -input=false -no-color -out=tfplan
  - when:
      condition:
        equal: ["lambda", << parameters.service >>]
      steps:
        - run:
            name: ECS Plan
            command: >
              terraform -chdir=<<parameters.path>> plan -input=false -no-color -out=tfplan
  - persist_to_workspace:
      paths:
        - .
      root: ~/project/<<parameters.path>>
