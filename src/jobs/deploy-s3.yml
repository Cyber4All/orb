description: |
  This job deploys an application to aws s3.

parameters:
  # Required Parameters
  tag:
    type: string
    description: |
      The semantic version of the project trying to be deployed
      https://semver.org/spec/v2.0.0.html
      (Required only when deploy == true)
  # Not Required Parameters
  deploy:
    type: boolean
    default: false
    description: |
      Set to True is build and sync changes with S3 and invalidate CF index.html.
      (defaults to false)
  s3-bucket:
    type: env_var_name
    default: S3_BUCKET
    description: |
      AWS S3 Bucket URI used to identify the resource
  source:
    type: env_var_name
    default: SOURCE
    description: |
      a local directory path to sync with s3
  aws-region:
    type: env_var_name
    default: AWS_REGION_N_VA
    description: |
      Name of environment variable storing the AWS region
  aws-access-key-id:
    type: env_var_name
    default: MACHINE_AWS_CF_AccessKey
    description: |
      AWS access key id for IAM role. Set this to the name of
      the environment variable you will use to hold this
      value, i.e. MACHINE_AWS_CF_AccessKey.
  aws-secret-access-key:
    type: env_var_name
    default: MACHINE_AWS_CF_SecretKey
    description: |
      AWS secret key for IAM role. Set this to the name of
      the environment variable you will use to hold this
      value, i.e. MACHINE_AWS_CF_SecretKey.
  slack-mentions:
    type: env_var_name
    default: MENTIONS
    description: |
      MENTIONS is the environment variable storing the name for the slack context.

executor: node/default

steps:
  - checkout
  - run:
      name: Install dependencies
      command: npm install
  - run:
      name: Build Application
      command: ng build --aot --build-optimizer=true --optimization=true --configuration=production
  - when:
      condition: <<parameters.deploy>>
      steps:
        - tag-repo:
            tag: <<parameters.tag>>
        - aws-s3/sync:
            aws-region: <<parameters.aws-region>>
            aws-access-key-id: <<parameters.aws-access-key-id>>
            aws-secret-access-key: <<parameters.aws-secret-access-key>>
            from: <<parameters.source>>
            to: s3://<<parameters.s3-bucket>>
        - run:
            name: Invalidate index.html in CloudFront
            command: >
              aws cloudfront create-invalidation --distribution-id $CLOUDFRONT_ID --paths /index.html
        - slack/notify:
            event: fail
            mentions: "@<<parameters.slack-mentions>>"
            template: basic_fail_1
        - slack/notify:
            event: pass
            custom: "<<include(message_templates/deploy_aws_success.json)>>"
