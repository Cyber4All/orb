description: |
  This job deploys an application to aws s3.

executor: node/default

parameters:
  source:
    type: string
    default: SOURCE
    description: |
      a local directory path to sync with s3

  s3_bucket:
    type: string
    description: |
      AWS S3 Bucket URI used to identify the resource

  tag:
    type: string
    description: |
      The semantic version of the project trying to be deployed
      https://semver.org/spec/v2.0.0.html

  aws_region:
    type: env_var_name
    default: AWS_REGION_N_VA
    description: |
      Name of environment variable storing the AWS region

  aws_access_key_id:
    default: AWS_ACCESS_KEY_ID
    type: env_var_name
    description: |
      AWS access key id for IAM role. Set this to the name of
      the environment variable you will use to hold this
      value, i.e. AWS_ACCESS_KEY_ID.

  aws_secret_access_key:
    default: AWS_SECRET_ACCESS_KEY
    type: env_var_name
    description: |
      AWS secret key for IAM role. Set this to the name of
      the environment variable you will use to hold this
      value, i.e. AWS_SECRET_ACCESS_KEY.

  mentions:
    type: env_var_name
    default: MENTIONS
    description: |
      MENTIONS is a the environment variable name for the slack context.

steps:
  - checkout
  - tag-repo:
      tag: <<parameters.tag>>
  - run:
      name: Install dependencies
      command: npm install
  - run:
      name: Build Application
      command: npm ng build --prod --no-progress
  - setup-aws:
      AWS_ACCESS_KEY_ID: <<parameters.aws_access_key_id>>
      AWS_REGION: <<parameters.aws_region>>
      AWS_SECRET_ACCESS_KEY_ID: <<parameters.aws_secret_access_key>>
  - aws-s3/sync:
      aws-region: <<parameters.aws_region>>
      from: <<parameters.source>>
      to: s3://<<parameters.s3_bucket>>
  - run:
      name: Invalidate index.html in CloudFront
      command: >
        aws cloudfront create-invalidation --distribution-id ${CLOUDFRONT_ID} --paths /index.html
  - slack/notify:
      event: fail
      mentions: "@$SLACK_MENTIONS"
      template: basic_fail_1
  - slack/notify:
      event: pass
      custom: "<<include(message_templates/deploy_aws_success.json)>>"

environment:
  SLACK_MENTIONS: <<parameters.mentions>>
