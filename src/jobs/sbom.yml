description: |
  DEPRECATED: This job generates a CycloneDX Software Bill of Materials (SBOM), analyzes it using cve-bin-tool then generates a shortcut story to review the findings

parameters:
  # --------------------------------------------------------------------------------
  # REQUIRED PARAMETERS
  # You must provide a value for each of these parameters.
  # ---------------------------------------------------------------------------------
  language:
    type: enum
    enum: ["node", "python", "go"]
    description: |
      Language of the repository generating an SBOM for.
      Options: (node, python, go)

  # ---------------------------------------------------------------------------------
  # OPTIONAL PARAMETERS
  # These parameters have reasonable defaults.
  # ---------------------------------------------------------------------------------
  shortcut-token:
    type: env_var_name
    default: SHORTCUT_TOKEN
    description: |
      Environment variable name for API key to make Shortcut API request

machine:
  image: ubuntu-2004:current

steps:
  - checkout
  - run:
      name: Prepare Artifacts Directory
      command: |
        mkdir ./artifacts
  - when:
      condition:
        equal: [ "node", << parameters.language >> ]
      steps:
        - run:
            name: Install CycloneDX Node
            command: |
              sudo apt install nodejs npm

              sudo npm i -g @cyclonedx/bom@3.10.6
        - run:
            name: Install Node Modules
            command: npm ci
        - run:
            name: Generate CycloneDX SBOM
            command: cyclonedx-node -d -o ./artifacts/cyclonedx-sbom.json
  - when:
      condition:
        equal: [ "python", << parameters.language >> ]
      steps:
        - run:
            name: Install CycloneDX v3.6.3
            command: |
              sudo apt install python3-pip

              pip3 install cyclonedx-bom==3.6.3
        - run:
            name: Generate CycloneDX SBOM
            command: cyclonedx-py -r --format json -o ./artifacts/cyclonedx-sbom.json -F
  - when:
      condition:
        equal: [ "go", << parameters.language >> ]
      steps:
        - run:
            name: Install CycloneDX-gomod
            command: |
              sudo apt install golang-go

              go install github.com/CycloneDX/cyclonedx-gomod/cmd/cyclonedx-gomod@v1.3.0
        - run:
            name: Run CycloneDX-gomod
            command: cyclonedx-gomod mod -output ./artifacts/cyclonedx-sbom.json -json=true -std=true
  - run:
      name: CVE-BIN-TOOL SBOM anlaysis
      command: |
        docker run --env BOM_FILE=cyclonedx-sbom.json -v $(pwd)/artifacts:/home/alpine/src --name cve-bin-tool cyber4all/cve-bin-tool:latest || true
  - run:
      name: Copy Output from Container
      command: |
        docker cp cve-bin-tool:/home/alpine/output.cve-bin-tool.$(date "+%Y-%m-%d").html ./artifacts
  - store_artifacts:
      path: ./artifacts
  - create-sbom-story:
      language: << parameters.language >>
