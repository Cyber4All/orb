description: >
  This job deploys an application to aws elasticbeanstalk. Deploy-Eb requires publish-docker

executor: node/default

parameters:
  # Required Parameters
  application-name:
    type: string
    description: |
      The name of the elastic beanstalk instance that will be updated in this job
  environment-name:
    type: string
    description: |
      The name of the elastic beanstalk instance that was given during eb init
  version:
    type: string
    description: |
      The semantic version of the eb instance
  # Not Required Parameters
  aws-secret-access-key:
    type: env_var_type
    default: MACHINE_AWS_EB_SecretKey
    description: |
      The secret key for the aws user
  aws-access-key-id:
    type: env_var_type
    default: MACHINE_AWS_EB_AccessKey
    description: |
      The access key for the aws user
  aws-region:
    type: env_var_name
    default: AWS_REGION_N_VA
    description: |
      Env var of AWS region to operate in
      (defaults to AWS_REGION_N_VA)
  isDocker:
    type: boolean
    default: true
    description: |
      The platform of the elastic beanstalk instance will be deployed with docker
  isNode:
    type: boolean
    default: false
    description: |
      The platform of the elastic beanstalk instance will be deployed with nodejs

steps:
  - aws-cli/setup:
      aws-access-key-id: <<parameters.aws-access-key-id>>
      aws-secret-access-key: <<parameters.aws-secret-access-key>>
  - aws-eb/setup
  - run:
      name: Verify Parameters
      command: >
        if [[ -z "<<parameters.application-name>>"" ]]; then
          echo "application-name is missing"
          exit 1
        fi

        if [[ -z "<<parameters.environment-name>>" ]]; then
          echo "environment-name is missing"
          exit 1
        fi

        if [[ -z "<<parameters.version>>" ]]; then
          echo "Version is missing"
          exit 1
        fi

        if [[ <<parameters.isNode>> ]]; then
          echo 'export EB_PARAM_PLATFORM=node.js' >> $BASH_ENV
        elif [[ <<parameters.isDocker>> ]]; then
          echo 'export EB_PARAM_PLATFORM=docker' >> $BASH_ENV
        else
          echo 'Either "isNode" or "isDocker" must be true.'
          exit 1
        fi
  - attach_workspace:
      at: .
  - tag-repo:
      - tag: <<parameters.version>>
  - run:
      name: Deploy to Elastic Beanstalk with docker platform
      command: >
        eb init "<<parameters.application-name>>" --region "<<parameters.aws-region>>" -p $EB_PARAM_PLATFORM
        eb deploy "<<parameters.environment-name>>" --verbose --label "$CIRCLE_PROJECT_REPONAME"-v"<<parameters.version>>"
