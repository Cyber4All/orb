description: >
  This job deploys an application to aws lambda.

parameters:
  aws-region:
    type: env_var_name
    default: AWS_REGION_N_VA
    description: |
      Specify the region for aws

  aws-access-key-id:
    type: env_var_name
    default: MACHINE_AWS_ECS_ACCESSKEY
    description: |
      Access key for MACHINE_AWS_ECS

  aws-secret-access-key-id:
    type: env_var_name
    default: MACHINE_AWS_ECS_SECRETKEY
    description: |
      Secret Key for Machine_AWS_ECS

  tag:
    type: string
    description: |
      The semantic version of the project to be deployed

  slack-mentions:
    type: env_var_name
    default: MENTIONS
    description: |
      MENTIONS stores the environment variable name for the Slack context.

  lambda-function-name:
    type: string
    description: |
      The name of the lambda function to be updated.

  lambda-package-value:
    type: string
    description: |
      The name of the lambda package to be updated.

  lambda-package-type:
    type: string
    description: |
      The type of the lambda package to be updated.

executor: node/default

steps:
  - checkout
  - aws-cli/setup:
      aws-access-key-id: <<parameters.aws-access-key-id>>
      aws-region: <<parameters.aws-region>>
      aws-secret-access-key: <<parameters.aws-secret-access-key-id>>
  - tag-repo:
      tag: <<parameters.tag>>
  - run:
      name: Update Lambda Function code based on package type (Zip or Image)
      command: >
        if [[ <<parameters.lambda-package-type>> == "Zip" ]]
        then
          aws lambda update-function-code --function-name <<parameters.lambda-function-name>> --zip-file <<parameters.lambda-package-value>>
        elif [[ <<parameters.lambda-package-type>> == "Image" ]]
        then
          aws lambda update-function-code --function-name <<parameters.lambda-function-name>> --image-uri <<parameters.lambda-package-value>>
        fi
  - slack/notify:
      event: fail
      mentions: "@<<parameters.slack-mentions>>"
      template: basic_fail_1
  - slack/notify:
      event: pass
      custom: "<<include(message_templates/deploy_aws_success.json)>>"
