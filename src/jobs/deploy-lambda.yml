description: |
  This job deploys an application to aws lambda.

parameters:
  # Required Parameters when deploy is true
  tag:
    type: string
    description: |
      The semantic version of the project trying to be deployed.
      https://semver.org/spec/v2.0.0.html
  function-name:
    type: string
    description: |
      The name of the lambda function to be updated.
  # Optional Parameters with Defaults
  language:
    type: enum
    enum: ["python", "rust", "node"]
    default: "node"
    description: |
      The language used in the project.
  requirements-path:
    type: string
    default: ./requirements.txt
    description: |
      The location of the requirements.txt file in the project
      (defaults to ./requirements.txt)
  build-path:
    type: string
    default: lib/
    description: |
      The location of the zip-file where the lambda function is to be updated.
      (defaults to lib/)
  src-path:
    type: string
    default: src/
    description: |
      The location of the code that is to be zipped and uploaded to lambda. Defaults to src/
  deploy:
    type: boolean
    default: false
    description: |
      Set to True is build and sync changes with S3 and invalidate CF index.html.
      (defaults to false)
  s3-bucket:
    type: env_var_name
    default: S3_BUCKET
    description: |
      S3 Bucket location for lamdba function
  aws-region:
    type: env_var_name
    default: AWS_REGION_N_VA
    description: |
      Environment variable of AWS region to operate in
      (defaults to AWS_REGION_N_VA)
  aws-access-key-id:
    type: env_var_name
    default: MACHINE_AWS_LAMBDA_AccessKey
    description: |
      AWS access key id for the IAM role. Set this to the name of
      the environment variable you will use to hold this
      value, i.e. MACHINE_AWS_LAMBDA_AccessKey
  aws-secret-access-key:
    type: env_var_name
    default: MACHINE_AWS_LAMBDA_SecretKey
    description: |
      AWS secret key for IAM role. Set this to the name of
      the environment variable you will use to hold this
      value, i.e. MACHINE_AWS_LAMBDA_SecretKey.
  slack-mentions:
    type: env_var_name
    default: MENTIONS
    description: |
      Env var name for notifying specific users in the Slack context.
      MENTIONS stores the environment variable name for the Slack context.

machine:
  image: ubuntu-2004:current

steps:
  - checkout
  - when:
      condition:
        equal: ["node", << parameters.language >>]
      steps:
        - node/install:
            node-version: "16.13.2"
        - node/install-packages
        - run:
            name: Build Application
            command: >
              npm run build --optimization=true
        - run:
            name: Zip Application
            command: >
              zip -r deployment-package.zip <<parameters.build-path>>
  - when:
      condition:
        equal: ["rust", << parameters.language >>]
      steps:
        - rust/install
        - run:
            name: Install Zig
            command: >
              sudo apt update && sudo apt install snapd && sudo snap install zig --beta --classic
        - run:
            name: Install Cargo-Lambda
            command: >
              cargo install cargo-lambda
        - run:
            # Zip file will be in {project-name}/bootstrap.zip
            name: Build Project and Zip it
            command: >
              cargo lambda build --output-format Zip --release --lambda-dir .
        - run:
            name: Move and Rename boostrap.zip
            command: >
              mv $CIRCLE_PROJECT_REPONAME/bootstrap.zip ./deployment-package.zip
  - when:
      condition:
        equal: ["python", << parameters.language >>]
      steps:
        - run:
            name: Install Pip Dependencies
            command: >
              pip install --target ./package -r <<parameters.requirements-path>>
        - run:
            name: Zip Dependencies
            command: >
              cd package && zip -r ../deployment-package.zip . && cd ../<<parameters.src-path>>
        - run:
            name: Zip Source Code
            command: >
              zip -r -g ../deployment-package.zip . && cd ..

  - when:
      condition: <<parameters.deploy>>
      steps:
        - run:
            name: "Verify Required Parameters"
            command: |
              if [ -z "<<parameters.tag>>" ]; then
                echo 'Parameter "tag" is missing.'
                exit 1
              fi
              if [ -z "<<parameters.function-name>>" ]; then
                echo 'Parameter "function-name" is missing.'
                exit 1
              fi
        - aws-cli/setup:
            aws-access-key-id: <<parameters.aws-access-key-id>>
            aws-region: <<parameters.aws-region>>
            aws-secret-access-key: <<parameters.aws-secret-access-key>>
        - run:
            name: Update Lambda Function code
            command: >
              aws lambda update-function-code --function-name <<parameters.function-name>> --publish --zip-file fileb://deployment-package.zip
        - slack/notify:
            event: fail
            template: basic_fail_1
        - slack/notify:
            event: pass
            custom: "<<include(message_templates/deploy_aws_success.json)>>"
