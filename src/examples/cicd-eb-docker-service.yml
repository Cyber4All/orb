description: |
  This example shows how a service node application being deployed to Elasticbeanstalk with docker
  can setup a CICD pipeline with this orb.

usage:
  version: 2.1

  orbs:
    cyber4all: cyber4all/orb@1.0.3
    docker: circleci/docker@2.0.3

  workflows:
    integration-testing:
      jobs:
        - docker/hadolint:
            dockerfiles: "Dockerfile:Dockerfile.dev"
            executor-class: medium

        - cyber4all/lint-app:
            docker-image: cimg/node:18.0.0
            isNode: true

        - cyber4all/publish-docker:
            image: "$CIRCLE_PROJECT_REPONAME"
            tag: $(cat ./package.json | grep version | head -1 | awk -F= "{ print $2 }" | sed 's/[version:,\",]//g' | tr -d '[[:space:]]')
            deploy: false # explicitly shows in develeopment (won't login i.e doesn't need context)
            filters:
              branches:
                ignore: releases

        - cyber4all/test-app:
            docker-image: cimg/node:18.0.0
            isNode: true

    deploy-production:
      jobs:
        - cyber4all/scan-docker:
            context:
              [DockerHub, AWS, Slack, Synk]
            image: "$CIRCLE_PROJECT_REPONAME"
            tag: $(cat ./package.json | grep version | head -1 | awk -F= "{ print $2 }" | sed 's/[version:,\",]//g' | tr -d '[[:space:]]')
            filters:
              branches:
                only: releases

        - cyber4all/publish-docker:
            name: cyber4all/publish-docker:semver
            context:
              - DockerHub
            image: "$CIRCLE_PROJECT_REPONAME"
            tag: $(cat ./package.json | grep version | head -1 | awk -F= "{ print $2 }" | sed 's/[version:,\",]//g' | tr -d '[[:space:]]')
            deploy: true
            filters:
              branches:
                only: releases

        - cyber4all/publish-docker:
            name: cyber4all/publish-docker:latest
            context:
              - DockerHub
            image: "$CIRCLE_PROJECT_REPONAME"
            tag: lastest
            check-version: false
            deploy: true
            filters:
              branches:
                only: releases

        - cyber4all/deploy-eb:
            requires:
              - cyber4all/publish-docker:semver
            context:
              [AWS, Slack]
            application-name: CLARK-Gateway
            environment-name: clark-gateway-production
            version: $(cat ./package.json | grep version | head -1 | awk -F= "{ print $2 }" | sed 's/[version:,\",]//g' | tr -d '[[:space:]]')
            isDocker: true # deploy to eb as a docker image
            filters:
              branches:
                only: releases
